										!___ ACTIVITY __!

public class MainActivity extends AppCompatActivity {
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
	}
}


									!__________ FRAGMENT __________!

public class SettingsFragment extends Fragment {
    public SettingsFragment() {    }

    @Override
    public void onCreate(Bundle savedInstance) {
        super.onCreate(savedInstance);
    }

 @Override
    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
        View view = inflater.inflate(R.layout.activity_settings, container, false);
	return view;
	}


 }


    public void loadFragment(Fragment fr)
    {
        FragmentManager fragmentManager = getFragmentManager();
  
	Bundle ar = new Bundle();
        ar.putString("con", con);
        fr.setArguments(ar);
                 
        FragmentTransaction fragmentTransaction = fragmentManager.beginTransaction();
        fragmentTransaction.replace(R.id.container_body, fr,"home");
        fragmentTransaction.commit();
    }

									!______ HANDLER ______!
   new Handler().postDelayed(new Runnable() {
          @Override
                public void run() {
                }
            }, SPLASH_TIME_OUT);

									!______ WEBVIEW ______!

Refer macros/java/webview.java

									!______ Toast _____!
Toast.makeText(getActivity(),"",Toast.LENGTH_SHORT).show();

									!____SHARED PREFERENCES ____!
SharedPreferences prefs;
SharedPreferences.Editor editor;
prefs = getSharedPreferences(MY_PREFS_NAME, MODE_PRIVATE);
editor = prefs.edit();
editor.putBoolean("run", true);
editor.apply();

									!____ INTERTESITIAL ADS _____!
    InterstitialAd mInterstitialAd;
    private void showInterstitial() {
        if (mInterstitialAd.isLoaded()) {
            final Handler handler = new Handler();
            handler.postDelayed(new Runnable() {
                @Override
                public void run() {
                    //Do something after 3000ms=3s
                    mInterstitialAd.show();
                }
            }, 100);

        }

    mInterstitialAd = new InterstitialAd(this);
            // set the ad unit ID
            mInterstitialAd.setAdUnitId(getString(R.string.intertestial_id));
            AdRequest adRequest = new AdRequest.Builder()
                    .addTestDevice("88AF93CFB9CDBC59347E4980E37194E3")
                    .build();
            // Load ads into Interstitial Ads
            mInterstitialAd.loadAd(adRequest);
            mInterstitialAd.setAdListener(new AdListener() {
                public void onAdLoaded() {
                    showInterstitial();
                }
            });


									!____ BANNER ADS ____!
mAdView = (AdView) findViewById(R.id.adView);
AdRequest addRequest = new AdRequest.Builder().addTestDevice("88AF93CFB9CDBC59347E4980E37194E3").build();
mAdView.loadAd(addRequest);

<com.google.android.gms.ads.AdView
            android:layout_gravity="center"
            xmlns:ads="http://schemas.android.com/apk/res-auto"
            android:id="@+id/adView"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:layout_centerHorizontal="true"
            android:layout_alignParentBottom="true"
            ads:adSize="SMART_BANNER"
            ads:adUnitId="@string/banner_id">
       </com.google.android.gms.ads.AdView>
    
        

								!____ SNACKBAR _____!
Snackbar snackbar = Snackbar
        .make(coordinatorLayout, "Welcome to AndroidHive", Snackbar.LENGTH_LONG)
 	.setAction("UNDO", new View.OnClickListener() {
            @Override
            public void onClick(View view) {
            }
        }).show();

									!____ FULLSCREEN _____!
super.onCreate(savedInstanceState);
requestWindowFeature(Window.FEATURE_NO_TITLE);
getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN, WindowManager.LayoutParams.FLAG_FULLSCREEN);
setContentView(R.layout.activity_main);



								!______ MIKEPENZ MATERIAL DRAWER _____!
private Toolbar mToolbar;
private Drawer result = null;
long drawe;


        //Set toolbar
        mToolbar = (Toolbar) findViewById(R.id.toolbar);
        setSupportActionBar(mToolbar);
        getSupportActionBar().setTitle(R.string.app_name);
        result = new DrawerBuilder()
                .withActivity(this)
                .withToolbar(mToolbar)
                .withDisplayBelowStatusBar(true)
                .withActionBarDrawerToggleAnimated(true)
                .withTranslucentStatusBar(false)
                .addDrawerItems(
                        new PrimaryDrawerItem().withName("My Appointments").withIcon(R.drawable.ic_all_out_black_24dp).withIdentifier(2)
                )
                .withOnDrawerItemClickListener(new Drawer.OnDrawerItemClickListener() {
                    @Override
                    public boolean onItemClick(View view, int position, IDrawerItem drawerItem) {
                        drawe = drawerItem.getIdentifier();
                        change((int) drawe);
                        return false;
                    }
                })
                .withHeader(R.layout.nav_header_main)
                .withSavedInstance(savedInstanceState)
                .build();
        //Pre-cache items to get a better scroll performance
        new RecyclerViewCacheUtil<IDrawerItem>().withCacheSize(2).apply(result.getRecyclerView(), result.getDrawerItems());
     }

		//CHANGE VOIDS
    public void change(int n) {
        switch (n) {
            case 2:
                Intent i = new Intent(this, LastAppointments.class);
		}
	}

	 @Override
    public void onBackPressed() {
        if (result != null && result.isDrawerOpen()) {
            result.closeDrawer();
        }
   }








